# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Publish to GitHub Packages

on:
  # 1. ÊâãÂä®Ëß¶Âèë
  workflow_dispatch:
    inputs:
      skip_tests:
        type: boolean
        description: 'Skip unit tests?'
        default: false
  # 2. Êé®ÈÄÅ
  push:
    # 2.1 tagÔºà‰ª• v ÂºÄÂ§¥Ôºâ
    tags:
      - 'v*'
    # 2.2 ÁâπÂÆöÂàÜÊîØ
    branches:
      # xxx-alpha.0, xxx-beta.1
      - pre-release
      # xxx-rc.0, xxx-rc.1
      - release-candidate
  # 3. PR ÂêàÂπ∂Âà∞ÁõÆÊ†áÂàÜÊîØ
  pull_request:
    types: [ closed ]
    branches: [ pre-release, release-candidate ]

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write  # ÂøÖÈ°ªÊúâÂÜôÂåÖÊùÉÈôê

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Ëé∑ÂèñÊúÄÊñ∞ commit message
      - name: Get commit message
        id: commit_message
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          echo "commit_message=$COMMIT_MSG" >> $GITHUB_OUTPUT
          echo "üîç Last commit message: $COMMIT_MSG"

      # Â¶ÇÊûúÊòØ push Âà∞ÂàÜÊîØÔºå‰∏î commit message ‰∏çÂê´ [publish]ÔºåÂàôË∑≥Ëøá
      - name: Check for [publish] in commit message
        if: >
          github.event_name == 'push' &&
          !contains(github.event.ref, 'refs/tags/') &&
          !contains(steps.commit_message.outputs.commit_message, '[publish]')
        run: |
          echo "‚ö†Ô∏è Commit message does not contain [publish]. Skipping publish job."
          exit 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          server-id: github
          server-username: ${{ github.actor }}
          server-password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up Node.js 22
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
          # cache: 'pnpm'
      - name: Install pnpm
        run: npm install -g pnpm@latest

      # Configure Gradle for optimal use in GitHub Actions, including caching of downloaded dependencies.
      # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@017a9effdb900e5b5b2fddfb590a105619dca3c3 # v4.4.2
        with:
          cache-read-only: false
          cache-write-only: false

      # ÊûÑÂª∫Âπ∂ÂèëÂ∏ÉÂà∞ GitHub Packages
      - name: Build and Publish to GitHub Packages
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          GRADLE_CMD="./gradlew clean build publishMavenPublicationToGitHubPackagesRepository publishMavenBomPublicationToGitHubPackagesRepository"
          GRADLE_CMD="$GRADLE_CMD -D gpr.user=${{ github.actor }}"
          GRADLE_CMD="$GRADLE_CMD -D gpr.key=${{ secrets.GITHUB_TOKEN }}"
          GRADLE_CMD="$GRADLE_CMD -P xtream.maven.publications.signing=off"
          GRADLE_CMD="$GRADLE_CMD -P xtream.maven.repo.github.enabled=true"
          GRADLE_CMD="$GRADLE_CMD -P xtream.frontend.build.jt-808-server-dashboard-ui.enabled=true"
          GRADLE_CMD="$GRADLE_CMD -P xtream.backend.build.checkstyle.enabled=true"

          # Â§ÑÁêÜË∑≥ËøáÊµãËØï
          if ${{ 
            (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_tests) ||
            (github.event_name == 'push' && contains(steps.commit_message.outputs.commit_message, '[skip-tests]'))
          }}; then
            echo "‚è≠Ô∏è Skipping tests..."
            GRADLE_CMD="$GRADLE_CMD -x test -x check"
          fi

          # ÊâßË°åÂèëÂ∏É
          $GRADLE_CMD

      - name: On Build Failed
        if: ${{ failure() }}
        run: |
          echo "‚ùå The publish job failed. Check logs above."

      - name: On Build Succeeded
        if: ${{ success() }}
        run: |
          echo "‚úÖ Successfully published to GitHub Packages!"
          echo "‚úÖ Location: https://github.com/${{ github.repository }}/packages"

      - name: On Build Finished
        if: always()
        run: |
          echo "üì¶ Finished."
